version: 2.1

orbs:
  github-cli: circleci/github-cli@1.0
  tools: replikativ/clj-tools@0

jobs:
  setup:
    executor: tools/clojurecli
    parameters:
      setup_cljs:
        type: boolean
        default: true
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          keys:
            - deps-{{ checksum "deps.edn" }}
            - deps-
      - run:
          name: resolve deps
          command: clojure -P
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
      - when:
          condition: <<parameters.setup_cljs>>
          steps:
            - restore_cache:
                keys:
                  - npm-{{ checksum "package-lock.json" }}
                  - npm-
            - run: npm ci
            - save_cache:
                key: npm-{{ checksum "package-lock.json" }}
                paths:
                  - /home/circleci/.npm
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ
  format:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run backward compatibility test
          command: bb fmt?
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  backward-compatibility-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Retrieve ssh-fingerprints
          command: mkdir ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
          no_output_timeout: 1m
      - run:
          name: Run backward compatibility test
          command: bb test back-compat
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  unit-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run unit test
          command: bb test unit
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  integration-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run integration test
          command: bb test integration
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  build:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Clean target directory
          command: bb clean
      - run:
          name: Compile Java Classes
          command: bb compile
      - run:
          name: Create pom file
          command: bb pom
      - run:
          name: Build jar
          command: bb jar
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ
  deploy:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: deploy
          command: bb deploy
  release:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: release
          command: bb release

workflows:
  build-test-and-deploy:
    jobs:
      - setup:
          context: dockerhub-deploy
          setup_cljs: false
      - build:
          context: dockerhub-deploy
          requires:
            - setup
      - format:
          context: dockerhub-deploy
          requires:
            - setup
      - unit-test:
          context: dockerhub-deploy
          requires:
            - build
      - backward-compatibility-test:
          context: dockerhub-deploy
          requires:
            - build
      - integration-test:
          context: dockerhub-deploy
          requires:
            - build
      - deploy:
          context:
            - dockerhub-deploy
            - clojars-deploy
            - github-token
          filters:
            branches:
              only: main
          requires:
            - format
            - unit-test
            - backward-compatibility-test
            - integration-test
      - release:
          context:
            - dockerhub-deploy
            - github-token
          filters:
            branches:
              only: main
          requires:
            - deploy